{"version":3,"file":"contentReceiver.js","mappings":"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","sources":["webpack://scribe-pal/./src/common/browser.ts","webpack://scribe-pal/./src/tab/utils/storageHelper.ts","webpack://scribe-pal/./src/tab/utils/utils.ts","webpack://scribe-pal/./src/tab/privilegedAPIs/constants.ts","webpack://scribe-pal/./src/tab/privilegedAPIs/contentReceiver.ts"],"sourcesContent":["/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nexport const browser = (globalThis as any).browser || (globalThis as any).chrome || {};\r\n\r\nexport const getManifestVersion = () => {\r\n    return Number(browser.runtime.getManifest().manifest_version);\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\n\r\nexport type TabsStorage = {\r\n    [tabId: number]: {\r\n        chatBoxes: {\r\n            [chatBoxId: string]: {\r\n                [key: string]: any;\r\n            } | undefined;\r\n        };\r\n    };\r\n} | undefined;\r\n\r\ntype TabData = NonNullable<TabsStorage>[number];\r\n\r\nexport async function getTabStorage (tabId: number): Promise<TabData> {\r\n    const result = await browser.storage.local.get(\"tabs\");\r\n    const tabsStorage = (result.tabs ?? {}) as NonNullable<TabsStorage>;\r\n\r\n    return tabsStorage[tabId] || {chatBoxes: {}};\r\n}\r\n\r\nexport async function setTabStorage (tabId: number, tabContents: TabData | undefined): Promise<void> {\r\n    const result = await browser.storage.local.get(\"tabs\");\r\n    const tabsStorage = (result.tabs ?? {}) as NonNullable<TabsStorage>;\r\n\r\n    if (!tabContents) {\r\n        delete tabsStorage[tabId];\r\n    }\r\n    else {\r\n        tabsStorage[tabId] = tabContents;\r\n    }\r\n\r\n    await browser.storage.local.set({tabs: tabsStorage});\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\nimport {MessageData, RuntimeConnectParams} from \"./types\";\r\n\r\n\r\nexport const prefixChatBoxId = (chatBoxId: string): string => `chat-box-${chatBoxId}`;\r\n\r\nexport const generateUniqueId = (): string => `${Date.now()}-${Math.random()}`;\r\n\r\nexport const runtimeConnect = <D extends keyof MessageData>({name, data, onMessage, onDisconnect}: RuntimeConnectParams<D>) => {\r\n    const port = browser.runtime.connect({name});\r\n\r\n    port.postMessage(data);\r\n\r\n    const listener = (response: any) => {\r\n        onMessage(response);\r\n    };\r\n\r\n    port.onMessage.addListener(listener);\r\n\r\n    port.onDisconnect.addListener(() => {\r\n        port.disconnect();\r\n        port.onMessage.removeListener(listener);\r\n\r\n        if(onDisconnect) onDisconnect();\r\n    });\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nexport const PRIVILEGED_API = {\r\n    BROWSER_STORAGE_LOCAL_GET: \"browser.storage.local.get\",\r\n    BROWSER_STORAGE_LOCAL_SET: \"browser.storage.local.set\",\r\n    BROWSER_RUNTIME_SEND_MESSAGE: \"browser.runtime.sendMessage\",\r\n    BROWSER_RUNTIME_CONNECT: \"browser.runtime.connect\",\r\n    GET_TAB_STORAGE: \"getTabStorage\",\r\n    SET_TAB_STORAGE: \"setTabStorage\",\r\n} as const;","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\nimport {getTabStorage, setTabStorage} from \"../utils/storageHelper\";\r\nimport {MessageData} from \"../utils/types\";\r\nimport {runtimeConnect} from \"../utils/utils\";\r\nimport {PRIVILEGED_API} from \"./constants\";\r\nimport {EventData} from \"./types\";\r\n\r\n\r\nwindow.addEventListener(\"message\", <T extends keyof MessageData>(event: MessageEvent<EventData<T>>) => {\r\n    if (event.source !== window || !event.data) return;\r\n\r\n    const {type} = event.data;\r\n\r\n    switch (type) {\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_GET: {\r\n            const {key} = event.data.payload;\r\n\r\n            browser.storage.local.get(key, (response: any) => {\r\n                window.postMessage(\r\n                    {\r\n                        type: `${PRIVILEGED_API.BROWSER_STORAGE_LOCAL_GET}.response`,\r\n                        key,\r\n                        response\r\n                    },\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_SET: {\r\n            const {payload} = event.data;\r\n\r\n            browser.storage.local.set(payload, () => {\r\n                window.postMessage(\r\n                    {type: `${PRIVILEGED_API.BROWSER_STORAGE_LOCAL_SET}.response`},\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.GET_TAB_STORAGE: {\r\n            const {tabId} = event.data.payload;\r\n\r\n            getTabStorage(tabId).then((response) => {\r\n                window.postMessage(\r\n                    {\r\n                        type: `${PRIVILEGED_API.GET_TAB_STORAGE}.response`,\r\n                        response\r\n                    },\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.SET_TAB_STORAGE: {\r\n            const {tabId, tabContents} = event.data.payload;\r\n\r\n            setTabStorage(tabId, tabContents).then(() => {\r\n                window.postMessage(\r\n                    {type: `${PRIVILEGED_API.SET_TAB_STORAGE}.response`},\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_SEND_MESSAGE: {\r\n            const {payload, requestId} = event.data;\r\n\r\n            browser.runtime.sendMessage(payload, (response: any) => {\r\n                window.postMessage(\r\n                    {\r\n                        type: `${PRIVILEGED_API.BROWSER_RUNTIME_SEND_MESSAGE}.response`,\r\n                        requestId,\r\n                        response\r\n                    },\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_CONNECT: {\r\n            const {name, payload, portId} = event.data;\r\n\r\n            runtimeConnect({\r\n                name,\r\n                data: payload,\r\n                onMessage: (response) => {\r\n                    window.postMessage(\r\n                        {\r\n                            type: `${PRIVILEGED_API.BROWSER_RUNTIME_CONNECT}.response`,\r\n                            portId,\r\n                            response\r\n                        },\r\n                        \"*\"\r\n                    );\r\n                },\r\n                onDisconnect: () => {\r\n                    window.postMessage(\r\n                        {\r\n                            type: `${PRIVILEGED_API.BROWSER_RUNTIME_CONNECT}.response.disconnect`,\r\n                            portId\r\n                        },\r\n                        \"*\"\r\n                    );\r\n                }\r\n            });\r\n\r\n            break;\r\n        }\r\n    }\r\n});\r\n"],"names":["browser","globalThis","chrome","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_getTabStorage","_callee","tabId","_result$tabs","result","tabsStorage","_context","storage","local","get","tabs","chatBoxes","_setTabStorage","_callee2","tabContents","_result$tabs2","_context2","set","PRIVILEGED_API","window","addEventListener","event","source","data","key","payload","response","postMessage","concat","_x","getTabStorage","_event$data$payload","_x2","_x3","setTabStorage","_event$data","requestId","runtime","sendMessage","_event$data2","portId","_ref","onMessage","onDisconnect","port","connect","listener","addListener","disconnect","removeListener","runtimeConnect"],"sourceRoot":""}