{"version":3,"file":"contentReceiver.js","mappings":"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","sources":["webpack://scribe-pal/./src/common/browser.ts","webpack://scribe-pal/./src/tab/utils/encryption.ts","webpack://scribe-pal/./src/tab/utils/storageHelper.ts","webpack://scribe-pal/./src/tab/utils/utils.ts","webpack://scribe-pal/./src/tab/privilegedAPIs/constants.ts","webpack://scribe-pal/./src/tab/privilegedAPIs/contentReceiver.ts"],"sourcesContent":["/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nexport const browser = (globalThis as any).browser || (globalThis as any).chrome || {};\r\n\r\nexport const getManifestVersion = () => {\r\n    return Number(browser.runtime.getManifest().manifest_version);\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {EXTENSION_NAME} from \"../../common/constants\";\r\n\r\nexport async function generateKey (): Promise<CryptoKey> {\r\n    return await crypto.subtle.generateKey(\r\n        {\r\n            name: 'AES-GCM',\r\n            length: 256\r\n        },\r\n        true,\r\n        ['encrypt', 'decrypt']\r\n    );\r\n}\r\n\r\nasync function getKey (): Promise<CryptoKey> {\r\n    const extensionNamespace = (window as any)[EXTENSION_NAME];\r\n    if (!extensionNamespace?.encryption?.key) {\r\n        throw new Error('Encryption key not found in extension namespace');\r\n    }\r\n    return extensionNamespace.encryption.key;\r\n}\r\n\r\nexport async function encrypt<T> (data: T): Promise<string> {\r\n    const iv = crypto.getRandomValues(new Uint8Array(12));\r\n    const encodedData = new TextEncoder().encode(JSON.stringify(data));\r\n    const key = await getKey();\r\n    const encryptedContent = await crypto.subtle.encrypt(\r\n        {\r\n            name: 'AES-GCM',\r\n            iv\r\n        },\r\n        key,\r\n        encodedData\r\n    );\r\n\r\n    const result = new Uint8Array(iv.length + encryptedContent.byteLength);\r\n\r\n    result.set(iv);\r\n    result.set(new Uint8Array(encryptedContent), iv.length);\r\n\r\n    return btoa(String.fromCharCode(...Array.from(result)));\r\n}\r\n\r\nexport async function decrypt<T> (encryptedData: string): Promise<T> {\r\n    const combined = new Uint8Array(\r\n        atob(encryptedData).split('').map(c => c.charCodeAt(0))\r\n    );\r\n    const iv = combined.slice(0, 12);\r\n    const content = combined.slice(12);\r\n    const key = await getKey();\r\n    const decrypted = await crypto.subtle.decrypt(\r\n        {\r\n            name: 'AES-GCM',\r\n            iv\r\n        },\r\n        key,\r\n        content\r\n    );\r\n    const decoded = new TextDecoder().decode(decrypted);\r\n\r\n    return JSON.parse(decoded);\r\n}\r\n\r\nexport const windowPostEncryptedMessage = (data: Record<string, any>, key: string) => {\r\n    if(!(key in data)) {\r\n        throw new Error(`Key ${key} not found in data`);\r\n    }\r\n\r\n    encrypt(data[key]).then(encryptedValue => {\r\n        window.postMessage(\r\n            {\r\n                ...data,\r\n                [key]: encryptedValue\r\n            },\r\n            \"*\"\r\n        );\r\n    });\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\n\r\nexport type TabsStorage = {\r\n    [tabId: number]: {\r\n        chatBoxes: {\r\n            [chatBoxId: string]: {\r\n                [key: string]: any;\r\n            } | undefined;\r\n        };\r\n    };\r\n} | undefined;\r\n\r\ntype TabData = NonNullable<TabsStorage>[number];\r\n\r\nexport async function getTabStorage (tabId: number): Promise<TabData> {\r\n    const result = await browser.storage.local.get(\"tabs\");\r\n    const tabsStorage = (result.tabs ?? {}) as NonNullable<TabsStorage>;\r\n\r\n    return tabsStorage[tabId] || {chatBoxes: {}};\r\n}\r\n\r\nexport async function setTabStorage (tabId: number, tabContents: TabData | undefined): Promise<void> {\r\n    const result = await browser.storage.local.get(\"tabs\");\r\n    const tabsStorage = (result.tabs ?? {}) as NonNullable<TabsStorage>;\r\n\r\n    if (!tabContents) {\r\n        delete tabsStorage[tabId];\r\n    }\r\n    else {\r\n        tabsStorage[tabId] = tabContents;\r\n    }\r\n\r\n    await browser.storage.local.set({tabs: tabsStorage});\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\nimport {MessageData, RuntimeConnectParams} from \"./types\";\r\n\r\n\r\nexport const prefixChatBoxId = (chatBoxId: string): string => `chat-box-${chatBoxId}`;\r\n\r\nexport const generateUniqueId = (): string => `${Date.now()}-${Math.random()}`;\r\n\r\nexport const runtimeConnect = <D extends keyof MessageData>({name, data, onMessage, onDisconnect}: RuntimeConnectParams<D>) => {\r\n    const port = browser.runtime.connect({name});\r\n\r\n    port.postMessage(data);\r\n\r\n    const listener = (response: any) => {\r\n        onMessage(response);\r\n    };\r\n\r\n    port.onMessage.addListener(listener);\r\n\r\n    port.onDisconnect.addListener(() => {\r\n        try {\r\n            port.disconnect();\r\n            port.onMessage.removeListener(listener);\r\n        } finally {\r\n            if(onDisconnect) onDisconnect();\r\n        }\r\n    });\r\n}","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nexport const PRIVILEGED_API = {\r\n    BROWSER_STORAGE_LOCAL_GET: \"browser.storage.local.get\",\r\n    BROWSER_STORAGE_LOCAL_SET: \"browser.storage.local.set\",\r\n    BROWSER_RUNTIME_SEND_MESSAGE: \"browser.runtime.sendMessage\",\r\n    BROWSER_RUNTIME_CONNECT: \"browser.runtime.connect\",\r\n    GET_TAB_STORAGE: \"getTabStorage\",\r\n    SET_TAB_STORAGE: \"setTabStorage\",\r\n} as const;","/************************************************************************\r\n *    Copyright (C) 2025 Code Forge Temple                              *\r\n *    This file is part of scribe-pal project                           *\r\n *    Licensed under the GNU General Public License v3.0.               *\r\n *    See the LICENSE file in the project root for more information.    *\r\n ************************************************************************/\r\n\r\nimport {browser} from \"../../common/browser\";\r\nimport {decrypt, windowPostEncryptedMessage} from \"../utils/encryption\";\r\nimport {getTabStorage, setTabStorage} from \"../utils/storageHelper\";\r\nimport {MessageData} from \"../utils/types\";\r\nimport {runtimeConnect} from \"../utils/utils\";\r\nimport {PRIVILEGED_API} from \"./constants\";\r\nimport {EventData} from \"./types\";\r\n\r\n\r\nconst privilegedApiRequestsHandler = <T extends keyof MessageData>(event: MessageEvent<EventData<T>>) => {\r\n    const {type} = event.data;\r\n\r\n    switch (type) {\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_GET: {\r\n            const {key} = event.data.payload;\r\n\r\n            browser.storage.local.get(key, (response: any) => {\r\n                windowPostEncryptedMessage({\r\n                    response,\r\n                    type: `${PRIVILEGED_API.BROWSER_STORAGE_LOCAL_GET}.response`,\r\n                    key,\r\n                }, \"response\");\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_SET: {\r\n            const {payload} = event.data;\r\n\r\n            browser.storage.local.set(payload, () => {\r\n                window.postMessage(\r\n                    {type: `${PRIVILEGED_API.BROWSER_STORAGE_LOCAL_SET}.response`},\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.GET_TAB_STORAGE: {\r\n            const {tabId} = event.data.payload;\r\n\r\n            getTabStorage(tabId).then((response) => {\r\n                windowPostEncryptedMessage({\r\n                    response,\r\n                    type: `${PRIVILEGED_API.GET_TAB_STORAGE}.response`,\r\n                }, \"response\");\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.SET_TAB_STORAGE: {\r\n            const {tabId, tabContents} = event.data.payload;\r\n\r\n            setTabStorage(tabId, tabContents).then(() => {\r\n                window.postMessage(\r\n                    {type: `${PRIVILEGED_API.SET_TAB_STORAGE}.response`},\r\n                    \"*\"\r\n                );\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_SEND_MESSAGE: {\r\n            const {payload, requestId} = event.data;\r\n\r\n            browser.runtime.sendMessage(payload, (response: any) => {\r\n                windowPostEncryptedMessage({\r\n                    response,\r\n                    type: `${PRIVILEGED_API.BROWSER_RUNTIME_SEND_MESSAGE}.response`,\r\n                    requestId,\r\n                }, \"response\");\r\n            });\r\n            break;\r\n        }\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_CONNECT: {\r\n            const {name, payload, portId} = event.data;\r\n\r\n            runtimeConnect({\r\n                name,\r\n                data: payload,\r\n                onMessage: (response) => {\r\n                    windowPostEncryptedMessage({\r\n                        response,\r\n                        type: `${PRIVILEGED_API.BROWSER_RUNTIME_CONNECT}.response`,\r\n                        portId,\r\n                    }, \"response\");\r\n                },\r\n                onDisconnect: () => {\r\n                    setTimeout((portIdRef) => {\r\n                        window.postMessage(\r\n                            {\r\n                                type: `${PRIVILEGED_API.BROWSER_RUNTIME_CONNECT}.response.disconnect`,\r\n                                portId: portIdRef\r\n                            },\r\n                            \"*\"\r\n                        );\r\n                    }, 100, portId);\r\n                }\r\n            });\r\n\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nconst processPrivilegedApiRequests = (event: MessageEvent) => {\r\n    if (\r\n        event.source !== window ||\r\n        !event.data ||\r\n        typeof event.data !== \"object\" ||\r\n        !(\"type\" in event.data)\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    const {type} = event.data;\r\n\r\n    switch (type) {\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_GET:\r\n        case PRIVILEGED_API.BROWSER_STORAGE_LOCAL_SET:\r\n        case PRIVILEGED_API.GET_TAB_STORAGE:\r\n        case PRIVILEGED_API.SET_TAB_STORAGE:\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_SEND_MESSAGE:\r\n        case PRIVILEGED_API.BROWSER_RUNTIME_CONNECT:{\r\n            const {payload: encryptedPayload} = event.data;\r\n\r\n            if(encryptedPayload) {\r\n                decrypt(encryptedPayload).then((payload) => {\r\n                    privilegedApiRequestsHandler({\r\n                        ...event,\r\n                        data: {\r\n                            ...event.data,\r\n                            payload\r\n                        }\r\n                    });\r\n                });\r\n            } else {\r\n                privilegedApiRequestsHandler(event);\r\n            }\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\nwindow.addEventListener(\"message\", processPrivilegedApiRequests);"],"names":["browser","globalThis","chrome","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","asyncGeneratorStep","_asyncToGenerator","_next","_throw","getKey","_getKey","_callee2","_extensionNamespace$e","extensionNamespace","_context2","window","encryption","key","_encrypt","_callee3","data","iv","encodedData","encryptedContent","result","_context3","crypto","getRandomValues","Uint8Array","TextEncoder","encode","JSON","stringify","subtle","encrypt","byteLength","set","btoa","fromCharCode","Array","from","_decrypt","_callee4","encryptedData","combined","content","decrypted","decoded","_context4","atob","split","map","charCodeAt","decrypt","TextDecoder","decode","parse","windowPostEncryptedMessage","concat","_x","encryptedValue","postMessage","_getTabStorage","_callee","tabId","_result$tabs","tabsStorage","_context","storage","local","get","tabs","chatBoxes","_setTabStorage","tabContents","_result$tabs2","PRIVILEGED_API","privilegedApiRequestsHandler","event","payload","response","getTabStorage","_event$data$payload","_x2","_x3","setTabStorage","_event$data","requestId","runtime","sendMessage","_event$data2","portId","_ref","onMessage","onDisconnect","port","connect","listener","addListener","disconnect","removeListener","runtimeConnect","setTimeout","portIdRef","addEventListener","source","encryptedPayload"],"sourceRoot":""}